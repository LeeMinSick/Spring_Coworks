<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.coworks.mapper.BoardMapper">

	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							posting_title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							posting_contents like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
			</trim>
			
			
			<trim prefix="(" suffix=") AND " >
				<choose>
					<when test="regtype == 'W'.toString()">
						posting_date_of_registration >= sysdate-7
					</when>
					<when test="regtype == 'M'.toString()">
						posting_date_of_registration >= sysdate-30  
					</when>
					<when test="regtype == 'T'.toString()">
						posting_date_of_registration >= sysdate-90 
					</when>
					<when test="regtype == 'S'.toString()">
						posting_date_of_registration >= sysdate-180 
					</when>
				</choose>
			</trim>
			
			<trim prefix="(" suffix=") AND " >
				<choose>
					<when test="bno > -1">
						board_number = #{bno}
					</when>
				</choose>
			</trim>
				
				
			
			
			
			
		
	</sql>


	<select id="getTime" resultType="String">
		SELECT sysdate FROM dual
	</select>


	<insert id="insertPosting"
		parameterType="com.coworks.domain.board.PostingVO">
		insert into posting(posting_number, posting_title,
		posting_contents,
		posting_hitpoint, posting_writer,
		posting_date_of_registration, isDeleted,
		board_number,
		membership_number )
		values(posting_seq.nextval, #{posting_title},
		#{posting_contents},
		0, #{posting_writer}, sysdate, #{isDeleted},
		#{board_number},
		#{membership_number})
	</insert>

	<insert id="insertPostingWithKey">
		<selectKey keyProperty="posting_number" order="BEFORE"
			resultType="long">
			select posting_seq.nextval from dual
		</selectKey>


		insert into posting(posting_number, posting_title, posting_contents,
		posting_hitpoint, posting_writer, posting_date_of_registration,
		isDeleted, board_number, membership_number )
		values(#{posting_number},
		#{posting_title}, #{posting_contents},
		0, #{posting_writer}, sysdate,
		#{isDeleted}, #{board_number},
		#{membership_number})

	</insert>

	<select id="detailPosting" parameterType="long"
		resultType="com.coworks.domain.board.PostingVO">
		select * from posting where posting_number=#{seq}
	</select>

	<delete id="deletePosting" parameterType="long">
		delete from posting
		where posting_number = #{seq}
	</delete>

	<update id="updatePosting"
		parameterType="com.coworks.domain.board.PostingVO">
		update posting set posting_title = #{posting_title},
		posting_contents = #{posting_contents}
		where posting_number =
		#{posting_number}
	</update>


	<select id="selectPostingList" 
		resultType="com.coworks.domain.board.PostingVO">
  <![CDATA[
  select 
    posting_number, posting_title, posting_contents, posting_writer, posting_date_of_registration, board_number
  from 
      (
      select /*+INDEX_DESC(Posting posting_number_pk) */
        rownum rn, posting_number, posting_title, posting_contents, posting_writer, posting_date_of_registration, board_number
      from 
        posting
      where 
  ]]>

		<include refid="criteria"></include>
		
  <![CDATA[    
      rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}   
  ]]>
	</select>


	<select id="getTotalPostingCount" resultType="int" >
		select count(*) from posting where

		<include refid="criteria"></include>

		posting_number > 0

	</select>


	<insert id="insertComment">

		insert into Comm (comment_number, posting_number,
			comment_contents, comment_name, comment_date_of_registration)
		values (seq_reply.nextval,
			#{posting_number}, #{comment_contents}, #{comment_name}, sysdate)

	</insert>

	<select id="getComment" resultType="com.coworks.domain.board.CommentVO">

		select * from Comm 
			where comment_number = #{comment_number}

	</select>


	<delete id="deleteComment">

		delete from Comm 
			where comment_number = #{comment_number}

	</delete>

	<update id="updateComment">

		update Comm set comment_contents = #{comment_contents}
			where comment_number = #{comment_number}

	</update>

	<select id="selectCommentList"
		resultType="com.coworks.domain.board.CommentVO">

		select /*+INDEX(Comm comment_number) */ comment_number, posting_number, comment_contents, comment_name, comment_date_of_registration
			from Comm
			where posting_number = #{posting_number}

	</select>


	<select id="getCommentCountByPosting" resultType="int">

		select count(comment_number) from Comm 
			where posting_number = #{posting_number}

	</select>



</mapper>
